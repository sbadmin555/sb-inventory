server.port=8080
server.context-path=/sb_inventory
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type.descriptor.sql=info
logging.level.com.sb=${LOG_LEVEL}

# SB Inventory Database
jdbc.url=${MYSQL_RDS_URL}
jdbc.user=${MYSQL_RDS_USER}
jdbc.password=${MYSQL_RDS_PASSWORD}
jdbc.driver=com.mysql.jdbc.Driver
jdbc.schema=
jdbc.acquireIncrement=3
jdbc.initialPoolSize=1
jdbc.minPoolSize=1
jdbc.maxPoolSize=60
jdbc.dialect=org.hibernate.dialect.MySQL5Dialect
jdbc.maxStatementsPerConnection=100
jdbc.maxIdleTime=300
jdbc.acquireRetryAttempts=5
jdbc.acquireRetryDelay=1000
jdbc.breakAfterAcquireFailure=false
jdbc.numHelperThreads=10
jdbc.maxAdministrativeTaskTime=300
jdbc.checkoutTimeout=30000
jdbc.idleConnectionTestPeriod=240
jdbc.preferredTestQuery=SELECT 1 FROM DUAL
jdbc.debugUnreturnedConnectionStackTraces=true
jdbc.unreturnedConnectionTimeout=86400
jdbc.checkIfTablesExist=true
jdbc.connReleaseModeToAfterTransaction=false
jdbc.packages.to.scan=com.sb.inventory.entity,com.sb.services.common.entity

#swagger
swagger.title=SupplyByte Inventory
swagger.description=SupplyByte Inventory REST API

